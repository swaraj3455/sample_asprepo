name: dotnetcore CI deployment

on:
   push:
     branches:
       - dev
     paths: 'src/CRMS.WebAPI/**'
    
   pull_request:
     branches:
       - 'dev'
     paths: 'src/CRMS.WebAPI/**'

env:
  AZURE_WEBAPP_NAME: ${{ env.WEBAPP_NAME }}    # wa-taa-dlm-be-dev
  PROJECT_PATH: ${{ env.PROJECT_PATH }}        # CRMS.WebAPI/CRMS.WebAPI.csproj
  CONFIGURATION: Release  
  AZURE_WEBAPP_PACKAGE_PATH: './published'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: ${{ env.DOTNET_CORE_VERSION }}           # set this to the dot net version to use
  
jobs:
    build:
      name: build
      if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
      runs-on: 
        group: Azure-Windows
      steps:
        # Checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@v3 

        - name: Setup .NET Core
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: ${{ env.DOTNET_VERSION }} 
        
        - name: Restore packages
          run: dotnet restore "${{ env.PROJECT_PATH }}"
        - name: Build app
          run: dotnet build "${{ env.PROJECT_PATH }}" --configuration ${{ env.CONFIGURATION }} --no-restore
        - name: Test app
          run: dotnet test "${{ env.PROJECT_PATH }}" --no-build
        - name: Publish app for deploy
          run: dotnet publish "${{ env.PROJECT_PATH }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
        - name: Publish Artifacts
          uses: actions/upload-artifact@v1.0.0
          with:
            name: webapp
            path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    deployDev:
        needs: build
        name: deploy to dev
        environment:
          name: Development
          url: ${{ steps.deploy_staging.outputs.webapp-url }}
        runs-on: 
          group: Azure-Windows
        steps:
           # Download artifacts
        - name: download artifacts
          uses: actions/download-artifact@v2
          with:
            name: webapp
           # Login to Azure
        - uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        - name: Run Azure webapp deploy action using Azure Credentials
          uses: azure/webapps-deploy@v2
          with: 
            app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
            package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/CRMS.WebAPI/CRMS.WebAPI/wa-taa-dlm-be-test'
      
        - name: logout
          run: |
            az logout

    deployTest:
        needs: deployDev
        name: deploy to test
        environment:
          name: Test
          url: ${{ steps.deploy_staging.outputs.webapp-url }}
        runs-on: 
          group: Azure-Windows
        steps:
           # Download artifacts
        - name: download artifacts
          uses: actions/download-artifact@v2
          with:
            name: webapp
           # Login to Azure
        - uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        - name: Run Azure webapp deploy action using Azure Credentials
          uses: azure/webapps-deploy@v2
          with: 
            app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
            package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/CRMS.WebAPI/CRMS.WebAPI/wa-taa-dlm-be-test'
      
        - name: logout
          run: |
            az logout

